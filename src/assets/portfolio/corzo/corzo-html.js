export default function html() {
  return `
<h1>What is Corzo?</h1><p>Corzo is a note-taking tool for account executives that use Salesforce as their CRM. While our CEO was working in enterprise sales, he noticed a lot of his colleagues complaining about having to use Salesforce, especially during sales calls. Account executives are supposed to take meeting notes on Salesforce, but because the UX was so slow and cumbersome, they generally opted to use a personal note tool (i.e. OneNote). This caused difficulties for the organization, especially when transitioning an opportunity to other team members.</p><p>With that problem in mind, we opted to build a dead-simple note-taking tool, with a UX focused specifically around the day-to-day workflow of an account executive. From a new tab on Google Chrome, a user could quickly create a note from their meeting calendar, with the attendee email being matched automatically to a Salesforce record. From there, a user could seamlessly open their Zoom meeting, make outgoing calls through Outreach, and invite team members to collaborate on the note in real time.</p><p>The core of Corzo is the note-taking experience, and a lot of our attention went towards making it as effortless and useful as possible. Based on our interviews with account executives across the US, we knew that a major pain point is data entry on Salesforce, something many organizations required their team to capture during calls (i.e. who makes the final decision on a deal). In Corzo, any field on the Salesforce record could be embedded inside a note / note template, effectively eliminating the friction experienced within Salesforce.</p><h1>What was my role?</h1><p>While my title was theoretically CXO, the reality was that the product team was only me and our backend engineer, James Hunt. As a result, my role shifted a lot over the course of the project, so I'll break it down into the following:</p><h2>Product Manager</h2><p>Being the team member with the most experience taking products from zero to one, I was charged with boiling down the hopes and dreams of the CEO into a clearly defined MVP. We interviewed account executives across the board, asking them if the pain we identified was real (it was), and if our proposed solution would help (general consensus was yes, it would).</p><p>Throughout the UX process (more on that later), we continued to get feedback on our prototypes / wireframes. It didn't take long before consensus was reached on what the MVP of Corzo would be. I worked with our backend developer — a talented full-stack engineer named James Hunt, who I'd worked with on many other past projects — to create Trello tasks, broken out into milestones that would enable us to test key features as quickly as possible.</p><p>Because our team was small, I had to split my time between programming the web app / Chrome extension and creating technical specifications for the backend with James. While some specifications could be explained in PRD-style documents, we spent a lot of time drawing out schemas and system architectures using LucidChart such as <a href="https://lucid.app/lucidchart/invitations/accept/409457fc-63ca-4a7e-8e39-06c688d3ee94" rel="noopener noreferrer nofollow">this one</a>, meant to ensure our system was designed to GDPR compliance.</p><p>This often meant doing preliminary research on Salesforce's behemoth of an API ahead of meetings, creating Postman collections for key endpoints, and coordinating with the CEO to ensure we were getting things right along the way.</p><p>Before each release milestone (i.e. internal testing, closed alpha, etc.), I also made sure we had necessary supporting materials, such as support documentation and a website. I would keep tabs on the progress made on each non-product tasks with the same rigor as product-specific ones, whether it be delegated to a 3rd party or assigned internally.</p><p>As we pushed through our release milestones, it became increasingly important that we interview our users to ensure our product worked as intended. We tracked every bug and reworked our roadmap to accommodate them, as necessary. Before moving forward with new features on our roadmap, we sought feedback on the UX and analyzed usage data recorded on Mixpanel, just to make sure our ongoing roadmap was appropriate to the needs of our users.</p><p>The result is a product I am truly proud of, and while growth was more challenging than hoped (due in part to our inability to pay for security certifications that we feel confident we would have passed), we still have happy, loyal users to this day.</p><h2>User Experience</h2><p>While I touched on this in the previous section, there is more to be said about my role as UX designer on this project, which I'll outline here.</p><p>Before diving into the design of Corzo, I first started out sketching ideas out on paper and iterating there. Like many other UX designers, paper sketching helps me focus on the important things with an experience, such as how features/pages intersect and are presented to a user. It isn't until we felt good about the direction on paper mockups that we went for lo-fi mockups intended for outside feedback.</p><p>In choosing the design software for this project, I went with what I was most comfortable with at the time — Sketch on Mac, made interactive using the Craft plugin by InVision. It is worth mentioning that while I've since moved on to Figma, I had only lightly experimented with it at the time and didn't feel compelled to switch.</p><p>On first pass at lo-fi's, I stuck mostly to dull colors and explicit components (i.e. text tabs instead of icons), to tighten the feedback loop and maximize input on our design direction. Key screens were shown off in slide decks at first, and then phased into interactive prototypes. Once we felt good about the UX and collected as much feedback as we could, I began to iterate higher fidelity mockups, again seeking continuous feedback throughout the process.</p><p>Once designs were approved for development, my work in UX still wasn't done. What I love about frontend development (more on that later) is that I get to experience UX challenges firsthand, and quickly iterate on tweaks without updating the design document right away. Of course, in larger teams this process can be replicated by tighter collaboration among development and UX (something I am a strong advocate of), but I had a blast!</p><p>Finally, as said in the previous section on product management, each release phase wasn't the end of the UX process, rather the next step in it. The thing that worked out great with this process was a simple principle: fix UX kinks early, rather than add new features on top. This kept our users happy and engaged, while improving our code quality and morale.</p>
  `;
}
